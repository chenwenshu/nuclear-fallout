module auto_test (
    input clk,              // 50MHz clock
    input rst_n,           // reset button (active low)   
    output spi_miso,            // AVR SPI MISO
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)           
    output avr_rx,          // AVR RX (FPGA TX)
    output a[8],
    output b[8]     // AVR RX buffer full
  ) {
  
    sig rst;
    .clk(clk){
      reset_conditioner reset_cond;
      .rst(rst) {
        
  //      blinker myBlinker;
      }
   //   .rst(rst){
   //     fsm state = {START, STOP};
   // }
   // dff count [25];
    }
  dff counter[29](.clk(clk), .rst(rst));
  fsm getstate(.clk(clk), .rst(rst)) = {START, STATE1, STATE2, STATE3};
  always {
    a = 8b00000000;
    b = 8b00000000;

    
    if(counter.q[28]==0){
        if(counter.q[27]==0)getstate.d=getstate.START;
          else{getstate.d=getstate.STATE1;}
        }else{
          if(counter.q[27]==0)getstate.d=getstate.STATE2;
          else{getstate.d=getstate.STATE3;}
        }
     
     counter.d=counter.q+1;
    
    case(getstate.q) {
      getstate.START:
          a = 8b01011111;
          b = 8b01011001;              
    
      getstate.STATE1:
          a = 8b11011111;
          b = 8b11011000;
    
      getstate.STATE2:
          a = 8b10000001;
          b = 8b10001001;    
    
      getstate.STATE3:
   //     if(press==0){
     //     getstate.d = getstate.STATE4;  
          a = 8b10000000;
          b = 8b01000000;
    }
    reset_cond.in = ~rst_n;
    rst = reset_cond.out;
    spi_miso = bz;
 //   led[0] = myBlinker.blink;
    spi_channel = bzzzz;
    avr_rx = bz;
  }
}